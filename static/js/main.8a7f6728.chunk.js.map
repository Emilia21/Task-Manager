{"version":3,"sources":["context/TaskListContext.js","components/Task.js","components/TaskList.js","components/TaskForm.js","App.js","index.js"],"names":["TaskListContext","createContext","TaskListContextProvider","props","initialState","JSON","parse","localStorage","getItem","useState","tasks","setTasks","editItem","setEditItem","useEffect","setItem","stringify","Provider","value","deleteTask","id","filter","task","addTask","title","uuid","clearTasks","findItem","item","find","editTask","newTasks","map","children","Task","useContext","className","onClick","TaskList","key","TaskForm","setTitle","onSubmit","e","preventDefault","type","placeholder","onChange","target","required","App","Component","ReactDOM","render","document","getElementById"],"mappings":"mRAGaA,EAAkBC,0BAsDhBC,EApDiB,SAACC,GAC/B,IAAMC,EAAeC,KAAKC,MAAMC,aAAaC,QAAQ,WAAa,GADzB,EAGfC,mBAASL,GAHM,mBAGlCM,EAHkC,KAG3BC,EAH2B,OAITF,mBAAS,MAJA,mBAIlCG,EAJkC,KAIxBC,EAJwB,KAMzCC,qBAAU,WACRP,aAAaQ,QAAQ,QAASV,KAAKW,UAAUN,MAC5C,CAACA,IA2BJ,OACE,kBAACV,EAAgBiB,SAAjB,CACEC,MAAO,CACLR,QACAS,WA7Ba,SAACC,GAClBT,EAASD,EAAMW,QAAO,SAACC,GAAD,OAAUA,EAAKF,KAAOA,OA6BxCG,QA1BU,SAACC,GACfb,EAAS,GAAD,mBAAKD,GAAL,CAAY,CAAEc,QAAOJ,GAAIK,WA0B7BC,WAvBa,WACjBf,EAAS,KAuBLgB,SApBW,SAACP,GAChB,IAAMQ,EAAOlB,EAAMmB,MAAK,SAACP,GAAD,OAAUA,EAAKF,KAAOA,KAC9CP,EAAYe,IAmBRE,SAhBW,SAACN,EAAOJ,GACvB,IAAMW,EAAWrB,EAAMsB,KAAI,SAACV,GAAD,OACzBA,EAAKF,KAAOA,EAAK,CAAEI,QAAOJ,MAAOE,KAEnCX,EAASoB,GACTlB,EAAY,OAYRD,aAGDT,EAAM8B,WC1BEC,EAvBF,SAAC,GAAc,IAAZZ,EAAW,EAAXA,KAAW,EACQa,qBAAWnC,GAApCmB,EADiB,EACjBA,WAAYQ,EADK,EACLA,SACpB,OACE,wBAAIS,UAAU,aACZ,8BAAOd,EAAKE,OACZ,6BACE,4BACEY,UAAU,uBACVC,QAAS,kBAAMlB,EAAWG,EAAKF,MAE/B,uBAAGgB,UAAU,sBAEf,4BACEA,UAAU,qBACVC,QAAS,kBAAMV,EAASL,EAAKF,MAE7B,uBAAGgB,UAAU,mBCFRE,EAbE,WAAO,IACd5B,EAAUyB,qBAAWnC,GAArBU,MACR,OACE,6BACE,wBAAI0B,UAAU,QACX1B,EAAMsB,KAAI,SAACV,GACV,OAAO,kBAAC,EAAD,CAAMiB,IAAKjB,EAAKF,GAAIE,KAAMA,UC0C5BkB,G,MAjDE,WAAO,IAAD,EAC+BL,qBAClDnC,GADMuB,EADa,EACbA,QAASG,EADI,EACJA,WAAYI,EADR,EACQA,SAAUlB,EADlB,EACkBA,SADlB,EAIKH,mBAAS,IAJd,mBAIde,EAJc,KAIPiB,EAJO,KA4BrB,OARA3B,qBAAU,WAEN2B,EADE7B,EACOA,EAASY,MAET,MAEV,CAACZ,IAGF,0BAAM8B,SAnBa,SAACC,GACpBA,EAAEC,iBACGhC,EAIHkB,EAASN,EAAOZ,EAASQ,KAHzBG,EAAQC,GACRiB,EAAS,MAemBL,UAAU,QACtC,2BACES,KAAK,OACLT,UAAU,aACVU,YAAY,WACZ5B,MAAOM,EACPuB,SA7Be,SAACJ,GACpBF,EAASE,EAAEK,OAAO9B,QA6Bd+B,UAAQ,IAEV,yBAAKb,UAAU,WACb,4BAAQS,KAAK,SAAST,UAAU,gBAC7BxB,EAAW,OAAS,OAEvB,4BAAQyB,QAASX,EAAYmB,KAAK,SAAST,UAAU,aAArD,aCtBOc,E,uKAfX,OACE,kBAAC,EAAD,KACE,yBAAKd,UAAU,aACb,yBAAKA,UAAU,eACb,yBAAKA,UAAU,QACb,kBAAC,EAAD,MACA,kBAAC,EAAD,c,GARIe,aCFlBC,IAASC,OAAO,kBAAC,EAAD,MAASC,SAASC,eAAe,W","file":"static/js/main.8a7f6728.chunk.js","sourcesContent":["import React, { useState, createContext, useEffect } from \"react\";\r\nimport uuid from \"uuid/dist/v1\";\r\n\r\nexport const TaskListContext = createContext();\r\n\r\nconst TaskListContextProvider = (props) => {\r\n  const initialState = JSON.parse(localStorage.getItem(\"tasks\")) || [];\r\n\r\n  const [tasks, setTasks] = useState(initialState);\r\n  const [editItem, setEditItem] = useState(null);\r\n\r\n  useEffect(() => {\r\n    localStorage.setItem(\"tasks\", JSON.stringify(tasks));\r\n  }, [tasks]);\r\n\r\n  const deleteTask = (id) => {\r\n    setTasks(tasks.filter((task) => task.id !== id));\r\n  };\r\n\r\n  const addTask = (title) => {\r\n    setTasks([...tasks, { title, id: uuid() }]);\r\n  };\r\n\r\n  const clearTasks = () => {\r\n    setTasks([]);\r\n  };\r\n\r\n  const findItem = (id) => {\r\n    const item = tasks.find((task) => task.id === id);\r\n    setEditItem(item);\r\n  };\r\n\r\n  const editTask = (title, id) => {\r\n    const newTasks = tasks.map((task) =>\r\n      task.id === id ? { title, id } : task\r\n    );\r\n    setTasks(newTasks);\r\n    setEditItem(null);\r\n  };\r\n\r\n  return (\r\n    <TaskListContext.Provider\r\n      value={{\r\n        tasks,\r\n        deleteTask,\r\n        addTask,\r\n        clearTasks,\r\n        findItem,\r\n        editTask,\r\n        editItem,\r\n      }}\r\n    >\r\n      {props.children}\r\n    </TaskListContext.Provider>\r\n  );\r\n};\r\n\r\nexport default TaskListContextProvider;\r\n","import React, { useContext } from \"react\";\r\nimport { TaskListContext } from \"../context/TaskListContext\";\r\n\r\nconst Task = ({ task }) => {\r\n  const { deleteTask, findItem } = useContext(TaskListContext);\r\n  return (\r\n    <li className=\"list-item\">\r\n      <span>{task.title}</span>\r\n      <div>\r\n        <button\r\n          className=\"delete-task task-btn\"\r\n          onClick={() => deleteTask(task.id)}\r\n        >\r\n          <i className=\"fas fa-trash-alt\"></i>\r\n        </button>\r\n        <button\r\n          className=\"edit-task task-btn\"\r\n          onClick={() => findItem(task.id)}\r\n        >\r\n          <i className=\"fas fa-pen\"></i>\r\n        </button>\r\n      </div>\r\n    </li>\r\n  );\r\n};\r\n\r\nexport default Task;\r\n","import React, { useContext } from \"react\";\r\nimport { TaskListContext } from \"../context/TaskListContext\";\r\nimport Task from \"./Task\";\r\n\r\nconst TaskList = () => {\r\n  const { tasks } = useContext(TaskListContext);\r\n  return (\r\n    <div>\r\n      <ul className=\"list\">\r\n        {tasks.map((task) => {\r\n          return <Task key={task.id} task={task} />;\r\n        })}\r\n      </ul>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default TaskList;\r\n","import React, { useState, useEffect, useContext } from \"react\";\r\nimport { TaskListContext } from \"../context/TaskListContext\";\r\n\r\nconst TaskForm = () => {\r\n  const { addTask, clearTasks, editTask, editItem } = useContext(\r\n    TaskListContext\r\n  );\r\n  const [title, setTitle] = useState(\"\");\r\n\r\n  const handleChange = (e) => {\r\n    setTitle(e.target.value);\r\n  };\r\n\r\n  const handleSubmit = (e) => {\r\n    e.preventDefault();\r\n    if (!editItem) {\r\n      addTask(title);\r\n      setTitle(\"\");\r\n    } else {\r\n      editTask(title, editItem.id);\r\n    }\r\n  };\r\n\r\n  useEffect(() => {\r\n    if (editItem) {\r\n      setTitle(editItem.title);\r\n    } else {\r\n      setTitle(\"\");\r\n    }\r\n  }, [editItem]);\r\n\r\n  return (\r\n    <form onSubmit={handleSubmit} className=\"form\">\r\n      <input\r\n        type=\"text\"\r\n        className=\"task-input\"\r\n        placeholder=\"Add task\"\r\n        value={title}\r\n        onChange={handleChange}\r\n        required\r\n      />\r\n      <div className=\"buttons\">\r\n        <button type=\"submit\" className=\"btn add-task\">\r\n          {editItem ? \"Edit\" : \"Add\"}\r\n        </button>\r\n        <button onClick={clearTasks} type=\"submit\" className=\"btn clear\">\r\n          Clear\r\n        </button>\r\n      </div>\r\n    </form>\r\n  );\r\n};\r\nexport default TaskForm;\r\n","import React, { Component } from \"react\";\r\nimport TaskList from \"./components/TaskList\";\r\nimport TaskListContextProvider from \"./context/TaskListContext\";\r\nimport \"./App.css\";\r\nimport TaskForm from \"./components/TaskForm\";\r\n\r\nclass App extends Component {\r\n  render() {\r\n    return (\r\n      <TaskListContextProvider>\r\n        <div className=\"container\">\r\n          <div className=\"app-wrapper\">\r\n            <div className=\"main\">\r\n              <TaskForm />\r\n              <TaskList />\r\n            </div>\r\n          </div>\r\n        </div>\r\n      </TaskListContextProvider>\r\n    );\r\n  }\r\n}\r\n\r\nexport default App;\r\n","import React from \"react\";\r\nimport ReactDOM from \"react-dom\";\r\nimport App from \"./App\";\r\n\r\nReactDOM.render(<App />, document.getElementById(\"root\"));\r\n"],"sourceRoot":""}